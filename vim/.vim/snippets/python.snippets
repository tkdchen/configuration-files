snippet #!
	#!/usr/bin/python

snippet imp
	import ${1:module}
# Module Docstring
snippet docs
	'''
	File: ${1:`Filename('$1.py', 'foo.py')`}
	Author: ${2:`g:snips_author`}
	Description: ${3}
	'''
snippet wh
	while ${1:condition}:
		${2:# code...}
snippet for
	for ${1:needle} in ${2:haystack}:
		${3:# code...}
# New Class
snippet cl
	class ${1:ClassName}(${2:object}):
		"""${3:docstring for $1}"""
		def __init__(self, ${4:arg}):
			${5:super($1, self).__init__()}
			self.$4 = $4
			${6}
# New Function
snippet def
	def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
		"""${3:docstring for $1}"""
		${4:pass}
snippet deff
	def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
		${3}
# New Method
snippet defs
	def ${1:mname}(self, ${2:arg}):
		${3:pass}
# New Property
snippet property
	def ${1:foo}():
		doc = "${2:The $1 property.}"
		def fget(self):
			${3:return self._$1}
		def fset(self, value):
			${4:self._$1 = value}
# Lambda
snippet ld
	${1:var} = lambda ${2:vars} : ${3:action}
snippet .
	self.
snippet try Try/Except
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
snippet try Try/Except/Else
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
snippet try Try/Except/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	finally:
		${5:pass}
snippet try Try/Except/Else/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
	finally:
		${6:pass}
# if __name__ == '__main__':
snippet ifmain
	if __name__ == '__main__':
		${1:main()}
# __magic__
snippet _
	__${1:init}__${2}
snippet modelcls
	class ${1:model_class}(models.Model):

		${2:name} = models.CharField(max_length=${3:30})

		def __unicode__(self):
			return self.$2

		class Meta:
			db_table = '$1'
snippet admincls
	class ${1:model_class}Admin(admin.ModelAdmin):
		pass
	admin.site.register($1, $1Admin)
snippet tag-url
	{% url ${1:index} %}
snippet formviewcls
	${1:from django.views.generic import FormView}
	class ${2:model_class}Form(FormView):
		form_class = ${3:form_class}

		def form_invalid(self, form):
			${4:pass}

		def form_valid(self, form):
			${5:pass}
snippet import-core-models
	from treasury.apps.core.models import ${1:class_name}
snippet import-capex-models
	from treasury.apps.capex.models import ${1:class_name}
snippet import-opex-models
	from treasury.apps.opex.models import ${1:class_name}
snippet import-budgetallocation-models
	from treasury.apps.budgetallocation.models import ${1:class_name}
snippet pdb-here
	import pdb; pdb.set_trace()
snippet utf8-coding
	# -*- coding: utf-8 -*-
snippet gplv3-header

	# Copyright (C) ${1:year}  ${2:name of author}
	#
	# This program is free software: you can redistribute it and/or modify
	# it under the terms of the GNU General Public License as published by
	# the Free Software Foundation, either version 3 of the License, or
	# (at your option) any later version.
	#
	# This program is distributed in the hope that it will be useful,
	# but WITHOUT ANY WARRANTY; without even the implied warranty of
	# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	# GNU General Public License for more details.
	#
	# You should have received a copy of the GNU General Public License
	# along with this program.  If not, see <http://www.gnu.org/licenses/>.
